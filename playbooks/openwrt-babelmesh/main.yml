---
- hosts: all
  gather_facts: false
  serial: 6

  tasks:
    # Wireless configurations
    - raw: uci delete wireless.radio0 || true
    - raw: uci delete uci delete wireless.@wifi-iface[2] || true
    - raw: uci delete uci delete wireless.@wifi-iface[1] || true
    - raw: uci delete uci delete wireless.@wifi-iface[0] || true

    - raw: uci set wireless.radio0=wifi-device
    - raw: uci set wireless.radio0.type=mac80211
    - raw: uci set wireless.radio0.channel={{ radio0_channel }}
    - raw: uci set wireless.radio0.hwmode={{ radio0_hwmode }}
    - raw: uci set wireless.radio0.htmode=HT20
    - raw: uci set wireless.radio0.macaddr={{ radio0_macaddr }}
    - raw: uci set wireless.radio0.ht_capab='SHORT-GI-40 TX-STBC RX-STBC1 DSSS_CCK-40'

    - raw: uci add wireless wifi-iface
    - raw: uci set wireless.@wifi-iface[0]=wifi-iface
    - raw: uci set wireless.@wifi-iface[0].device=radio0
    - raw: uci set wireless.@wifi-iface[0].encryption=none
    - raw: uci set wireless.@wifi-iface[0].mode=adhoc
    - raw: uci set wireless.@wifi-iface[0].ssid='{{ mesh_ssid }}'
    - raw: uci set wireless.@wifi-iface[0].bssid=02:CA:FF:EE:BA:BE
    - raw: uci set wireless.@wifi-iface[0].wmm=1
    - raw: uci set wireless.@wifi-iface[0].network='{{ mesh_network }}'

    - raw: uci add wireless wifi-iface
    - raw: uci set wireless.@wifi-iface[1]=wifi-iface
    - raw: uci set wireless.@wifi-iface[1].device=radio0
    - raw: uci set wireless.@wifi-iface[1].encryption=none
    - raw: uci set wireless.@wifi-iface[1].mode=ap
    - raw: uci set wireless.@wifi-iface[1].ssid='{{ ap_ssid }}'
    - raw: uci set wireless.@wifi-iface[1].wmm=1
    - raw: uci set wireless.@wifi-iface[1].network='{{ ap_network }}'

    - raw: uci add wireless wifi-iface
    - raw: uci set wireless.@wifi-iface[2]=wifi-iface
    - raw: uci set wireless.@wifi-iface[2].device=radio0
    - raw: uci set wireless.@wifi-iface[2].encryption=psk2
    - raw: uci set wireless.@wifi-iface[2].mode=ap
    - raw: uci set wireless.@wifi-iface[2].ssid='{{ znet_ssid }}'
    - raw: uci set wireless.@wifi-iface[2].key='{{ znet_key }}'
    - raw: uci set wireless.@wifi-iface[2].network='{{ znet_network }}'
    - raw: uci commit

    # Network configuration
    - raw: uci show network | cut -f 1-2 -d '.' | grep -v interface | sort | uniq | xargs uci del 
    - raw: uci set network.loopback=interface
    - raw: uci set network.loopback.ifname=lo
    - raw: uci set network.loopback.proto=static
    - raw: uci set network.loopback.ipaddr=127.0.0.1
    - raw: uci set network.loopback.netmask=255.0.0.0
    - raw: uci set network.lan=interface
    - raw: uci set network.lan.ifname=eth0
    - raw: uci set network.lan.proto=static
    - raw: uci set network.lan.ip6addr={{ lan_ip6addr }}
    - raw: uci set network.lan.ip6gw={{ lan_ip6gw }}
    - raw: uci set network.lan.ipaddr={{ lan_ipaddr }}
    - raw: uci set network.lan.netmask={{ lan_netmask }}
    - raw: uci set network.lan.gateway={{ lan_gateway }}
    - raw: uci set network.lan.dns={{ lan_dns }}
    - raw: uci set network.{{ mesh_network }}=interface
    - raw: uci set network.{{ mesh_network }}.ifname=wlan0-1
    - raw: uci set network.{{ mesh_network }}.proto=none
    - raw: uci set network.{{ ap_network }}=interface
    - raw: uci set network.{{ ap_network }}.ifname=wlan0
    - raw: uci set network.{{ ap_network }}.proto=static
    - raw: uci set network.{{ ap_network }}.ip6addr={{ ap_ip6addr }}
    - raw: uci set network.{{ ap_network }}.ipaddr={{ ap_ipaddr }}
    - raw: uci set network.{{ ap_network }}.netmask={{ ap_netmask }}
    - raw: uci set network.{{ znet_network }}=interface
    - raw: uci set network.{{ znet_network }}.ifname=wlan0-1
    - raw: uci set network.{{ znet_network }}.proto=static
    - raw: uci set network.{{ znet_network }}.ipaddr={{ znet_ipaddr }}
    - raw: uci set network.{{ znet_network }}.netmask={{ znet_ipaddr }}
    - raw: uci set network.{{ znet_network }}.dns={{ znet_dns }}

    # Does not work because my openwrt relays do not have python (not enough space available)
    # - name: Network template
    #   template: src=templates/etc-config-network dest=/etc/config/network owner=root group=root mode=0644
    # - name: DHCP template
    #   template: src=templates/etc-config-dhcp dest=/etc/config/dhcp owner=root group=root mode=0644
