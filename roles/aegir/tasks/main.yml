---
# Installs Aegir3 (http://www.aegirproject.org)
# Assumes Debian Jessie, with MariaDB, Nginx, php5-fpm

# https://github.com/gaspaio/ansible-devbox/blob/master/roles/mysql/tasks/server.yml
# Install server using a preseed file to set the root password
- name: Check for previous MySQL installation
  shell: "[ -f /usr/sbin/mysqld ]"
  ignore_errors: True
  register: mysqld_exists

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - pwgen

- name: Generate a root password for MySQL
  shell: pwgen 15 1 > /root/.mysql.root
  when: mysqld_exists|failed

- name: Preseed Aegir Debian configurations
  shell: "{{ item }} | debconf-set-selections"
  with_items:
    - echo "mariadb-server-10.1 mysql-server/root_password password `cat /root/.mysql.root`"
    - echo "mariadb-server-10.1 mysql-server/root_password_again password `cat /root/.mysql.root`"
    - echo "debconf aegir/site string {{ inventory_hostname }}"
    - echo "debconf aegir/db_host string 127.0.0.1"
    - echo "debconf aegir/db_user string root"
    - echo "debconf aegir/db_password password `cat /root/.mysql.root`"
    - echo "debconf aegir/webserver string nginx"
  tags:
    - packages
    - aegir-nginx
    - aegir-mariadb

# "echo debconf aegir/email string $aegir_email | debconf-set-selections"
# "echo debconf aegir/makefile string $aegir_makefile | debconf-set-selections"

- name: Making sure the drush package is removed (aegir3 installs through composer)
  apt: pkg=drush state=absent

- apt: update_cache=yes
  tags:
    - packages

- apt:
    name: "{{ item }}"
    state: present
    install_recommends: no
    default_release: jessie-backports
  with_items:
    - nginx
  tags:
    - packages
    - aegir-nginx

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - pwgen
    - curl
    - gettext
    - php5-fpm
    - php5-gd
    - php5-cli
    - php5-curl
    - php5-intl
    - php5-ldap
    - php5-mcrypt
    - php5-xsl
    - xauth
    - xvfb
    - libxrender1
    - ttf-mscorefonts-installer
    - fonts-dejavu-core
  tags:
    - packages

# A bit off topic, but too often had the issue where mailname was misconfigured
- copy: content="{{ inventory_hostname }}" dest=/etc/mailname
- file: path=/etc/mailname owner=root group=root mode=0644

# MariaDB 10.1
- apt_key: keyserver=keyserver.ubuntu.com id=0xcbcb082a1bb943db
  tags:
    - packages
    - aegir
    - aegir-mariadb

- apt_repository:
    repo="deb http://ftp.osuosl.org/pub/mariadb/repo/10.1/debian {{ ansible_distribution_release }} main"
    update_cache=yes
    state=present
  tags:
    - packages
    - aegir
    - aegir-mariadb

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - mariadb-server-10.1
    - mariadb-client-10.1
  tags:
    - packages
    - aegir
    - aegir-mariadb

- name: Get the Aegir repo key
  apt_key: url=http://debian.aegirproject.org/key.asc state=present
  tags:
    - aegir
    - aegir-repo

- name: Add the Aegir apt repository
  apt_repository:
    repo='deb http://debian.aegirproject.org stable main'
    state=present
    update_cache=yes
  tags:
    - aegir
    - aegir-repo

- apt: pkg=aegir3 state=installed

- name: Download provision_symbiotic from Github
  sudo_user: aegir
  git: repo=https://github.com/coopsymbiotic/provision_symbiotic.git
       version=master
       dest=/var/aegir/.drush/provision_symbiotic
       update=yes

- name: Download provision_customhtaccess from Github
  sudo_user: aegir
  git: repo=https://github.com/mlutfy/provision_customhtaccess.git
       version=master
       dest=/var/aegir/.drush/provision_customhtaccess
       update=yes

##
## Update hosting_civicrm from git
##
- name: Get Hostmaster root directory
  become: true
  become_user: aegir
  shell: "drush @hm status | grep 'Drupal root' | awk '{ print $4 }'"
  register: hostmaster_root
  tags:
    - aegir-hosting-civicrm
    - aegir-hosting-https
    - aegir-civicrm-platform
    - aegir-fixownership

# Unless we check if it's already a git repo, in most cases it's static
# since it has been updated by the aegir3 debian packages.
- name: Delete the old hosting_civicrm directory
  file: path="{{ hostmaster_root.stdout }}/profiles/hostmaster/modules/aegir/hosting_civicrm" state=absent
  tags:
    - aegir-hosting-civicrm

- name: Deploy latest hosting_civicrm from Git
  become: true
  become_user: aegir
  git: repo=https://git.drupal.org/project/hosting_civicrm.git
       version=7.x-3.x
       dest="{{ hostmaster_root.stdout }}/profiles/hostmaster/modules/aegir/hosting_civicrm"
       update=yes
  tags:
    - aegir-hosting-civicrm

- name: Flush Hostmaster cache
  become: true
  become_user: aegir
  shell: "drush @hm cc all"
  tags:
    - aegir-hosting-civicrm

##
## Deploy hosting_https
##
# FIXME: if hosting_https is already deployed, and Aegir has chmod 0777 everything
# it will cause problems with the dehydrated submodule (which won't be reset by force=yes on the parent).
- name: Deploy latest hosting_https from Git
  become: true
  become_user: aegir
  git: repo=https://gitlab.com/aegir/hosting_https.git
       version=master
       dest="{{ hostmaster_root.stdout }}/sites/{{ inventory_hostname }}/modules/hosting_https"
       update=yes
       force=yes
       recursive=yes
  tags:
    - aegir-hosting-https

##
## Configurations
##
- name: Aegir modules | Enable a few extra Aegir modules
  shell: "drush @hm en hosting_https hosting_letsencrypt hosting_alias hosting_clone hosting_git hosting_git_pull hosting_tasks_extra hosting_civicrm_cron hosting_civicrm -y"
  become: true
  become_user: aegir
  tags:
    - aegir-hosting-https

- name: Aegir modules | Enable hosting_nginx_https
  shell: "drush @hm en hosting_nginx_https -y"
  become: true
  become_user: aegir
  when: "'aegir-apache' not in group_names"
  tags:
    - aegir-hosting-https

- name: Aegir modules | Enable hosting_apache_https
  shell: "drush @hm en hosting_apache_https -y"
  become: true
  become_user: aegir
  when: "'aegir-apache' in group_names"
  tags:
    - aegir-hosting-https

- name: Aegir modules | Disable the annoying Drupal overlay
  shell: "drush @hm dis overlay -y"
  become: true
  become_user: aegir

- name: Aegir settings | Enable Aegir queue process
  shell: "drush @hm vset hosting_feature_queued 1"
  become: true
  become_user: aegir
  tags:
    - aegir-settings

- name: Aegir settings | Set CiviCRM default cron interval to 15 mins
  shell: "drush @hm vset hosting_civicrm_cron_default_interval 900"
  become: true
  become_user: aegir
  tags:
    - aegir-settings

- name: Aegir settings | Misc other settings
  become: true
  become_user: aegir
  shell: "drush @hm vset {{ item.name }} {{ item.value }}"
  with_items:
    - { name: 'hosting_feature_git', value: '1' }
    - { name: 'hosting_feature_git_pull', value: '1' }
    - { name: 'hosting_feature_http_basic_auth', value: '1' }
    - { name: 'hosting_feature_migrate', value: '1' }
    - { name: 'hosting_feature_remote_import', value: '1' }
    - { name: 'hosting_feature_fix_ownership', value: '1' }
    - { name: 'hosting_feature_sync', value: '1' }
    - { name: 'hosting_feature_tasks_extra', value: '1' }
    - { name: 'hosting_feature_task_gc', value: '1' }
    - { name: 'hosting_queue_civicrm_cron_enabled', value: '1' }
    - { name: 'hosting_queue_civicrm_cron_frequency', value: '300' }
    - { name: 'hosting_queue_civicrm_cron_items', value: '50' }
  tags:
    - aegir-settings

- name: Aegir settings | Delete a few settings
  become: true
  become_user: aegir
  shell: "drush @hm vdel {{ item }}"
  with_items:
    - update_notify_emails

# TODO
# - vget hosting_default_web_server, and enable nginx-ssl, then run verify.
# - enable SSL on the hostmaster site (so that LE can later generate a cert for it)

- name: Restart Aegir hosting queue
  service: name=hosting-queued state=restarted

- name: Download wkhtmltopdf
  get_url:
    url=http://download.gna.org/wkhtmltopdf/0.12/0.12.3/wkhtmltox-0.12.3_linux-generic-amd64.tar.xz
    dest=/usr/local/wkhtmltox-0.12.3_linux-generic-amd64.tar.xz
    mode=0644
  tags:
    - aegir
    - aegir-wkhtmltopdf

- unarchive: src=/usr/local/wkhtmltox-0.12.3_linux-generic-amd64.tar.xz dest=/usr/local/ copy=no
  tags:
    - aegir
    - aegir-wkhtmltopdf

- name: Create symlink for wkhtmltopdf
  file: src=/usr/local/wkhtmltox/bin/wkhtmltopdf dest=/usr/local/bin/wkhtmltopdf state=link
  tags:
    - aegir
    - aegir-wkhtmltopdf

- name: Configure the fix-ownership and fix-permissions scripts
  shell: "bash /var/aegir/{{ hostmaster_root.stdout }}/profiles/hostmaster/modules/aegir/hosting_tasks_extra/{{ item }}/scripts/install.sh"
  with_items:
    - fix_ownership
    - fix_permissions
  args:
    creates: /usr/local/bin/fix-drupal-site-ownership.sh
  tags:
    - aegir-fixownership

- include: letsencrypt.yml
- include: settings-php.yml
- include: settings-mysql.yml

- name: bash | Deploy our .bashrc for the Aegir user.
  template: src=var/aegir/dot.bashrc dest=/var/aegir/.bashrc owner=aegir group=aegir mode=0644

- name: bash | Deploy our .profile for the Aegir user (required for bashrc to be read).
  template: src=var/aegir/dot.bashrc dest=/var/aegir/.bashrc owner=aegir group=aegir mode=0644

- name: sudo | Deploy sudoers file for people who are allowed to sudo to aegir
  template: src=etc/sudoers.d/symbiotic-aegir dest=/etc/sudoers.d/symbiotic-aegir owner=root group=root mode=0440
  tags:
    - aegir-sudoers

- name: ssh | Create the .ssh directory for the Aegir user
  file: path=/var/aegir/.ssh state=directory mode=0700 owner=aegir group=aegir
  tags:
    - aegir-ssh

##
## Platform management
##
- name: ssh | Copy the ssh platform pub key
  copy: src="/etc/ansible/files/sshkeys/aegir/id_rsa_platforms.pub" dest=/var/aegir/.ssh/id_rsa_platforms.pub owner="aegir" group="aegir" mode=0600
  tags:
    - aegir-ssh

- name: ssh | Copy the ssh platform priv key
  copy: src="/etc/ansible/files/sshkeys/aegir/id_rsa_platforms" dest=/var/aegir/.ssh/id_rsa_platforms owner="aegir" group="aegir" mode=0600
  tags:
    - aegir-ssh

- name: ssh | Create the .ssh/config file if necessary
  file: path=/var/aegir/.ssh/config state=touch mode=0600 owner=aegir group=aegir
  tags:
    - aegir-ssh

- name: ssh | Copy ssh config for this key
  blockinfile:
    dest: /var/aegir/.ssh/config
    block: |
      Host git-alt.symbiotic.coop
        IdentityFile /var/aegir/.ssh/id_rsa_platforms
  tags:
    - aegir-ssh

- name: ssh | Run ssh-keyscan to get client fingerprint
  shell: "ssh-keyscan -H -T 10 git-alt.symbiotic.coop"
  register: host_fingerprint
  changed_when: false
  become: true
  become_user: aegir
  tags:
    - aegir-ssh

- name: ssh | Add git ssh host key fingerprint to known_hosts to avoid prompt
  known_hosts:
    name="git-alt.symbiotic.coop"
    key="{{ host_fingerprint.stdout }}"
  become: true
  become_user: aegir
  tags:
    - aegir-ssh

- name: platform | Configure the CiviCRM 4.7 SymbioTIC platform
  shell: "drush provision-save @platform_CiviCRM47 --root=/var/aegir/platforms/civicrm-4.7 --context_type=platform --repo_url=ssh://git@git-alt.symbiotic.coop/symbiotic-platform-d7-civicrm.git --git_ref=4.7 --deploy_from_git=1"
  args:
    creates: /var/aegir/.drush/platform_CiviCRM47.alias.drushrc.php
  become: true
  become_user: aegir
  tags:
    - aegir-civicrm-platform

- name: platform | Trigger installation of the CiviCRM 4.7 SymbioTIC platform
  shell: "drush @hm hosting-import @platform_CiviCRM47"
  args:
    creates: /var/aegir/platforms/civicrm-4.7
  become: true
  become_user: aegir
  tags:
    - aegir-civicrm-platform
