---
# Installs Aegir3 (http://www.aegirproject.org)
# Assumes Debian, with MariaDB, Nginx, php-fpm

- include_vars: "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
  when: phpversion is undefined
  tags:
    - packages
    - packages-php
    - aegir-php

- name: Debian | Add Sury.org apt reporitory key
  apt_key:
    url: "https://packages.sury.org/php/apt.gpg"
    state: present
    keyring: /etc/apt/trusted.gpg.d/php.gpg
  when: (phpversion == 7.2 or phpversion == 7.1) and ansible_distribution == "Debian"
  tags:
    - packages
    - packages-php
    - aegir-php

- name: Ubuntu | Add Sury.org apt reporitory key
  apt_key:
    url: "https://packages.sury.org/php/apt.gpg"
    state: present
    keyring: /etc/apt/trusted.gpg.d/php.gpg
  when: (phpversion == 7.2 or phpversion == 7.1) and ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"
  tags:
    - packages
    - packages-php
    - aegir-php

- name: Debian | Add Sury.org repository
  apt_repository:
    repo: deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main
    state: present
    update_cache: yes
  when: (phpversion == 7.2 or phpversion == 7.1) and ansible_distribution == "Debian"
  tags:
    - packages
    - packages-php
    - aegir-php

- name: Ubuntu | Add Sury.org repository
  apt_repository:
    repo: deb http://ppa.launchpad.net/ondrej/php/ubuntu {{ ansible_distribution_release }} main
    state: present
    update_cache: yes
  when: (phpversion == 7.2 or phpversion == 7.1) and ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"
  tags:
    - packages
    - packages-php
    - aegir-php

- name: Debian | Pin Sury repositories
  template: src=etc/apt/preferences.d/php-symbiotic dest=/etc/apt/preferences.d/php-symbiotic owner=root group=root mode=0444
  when: (phpversion == 7.2 or phpversion == 7.1) and (ansible_distribution == "Debian" or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"))
  tags:
    - packages
    - packages-php
    - aegir-php

# https://github.com/gaspaio/ansible-devbox/blob/master/roles/mysql/tasks/server.yml
# Install server using a preseed file to set the root password
- name: Check for previous MySQL installation
  shell: "[ -f /usr/sbin/mysqld ]"
  ignore_errors: True
  register: mysqld_exists

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - pwgen

- name: Generate a root password for MySQL
  shell: pwgen 15 1 > /root/.mysql.root
  when: mysqld_exists|failed

- name: Preseed Aegir Debian configurations
  shell: "{{ item }} | debconf-set-selections"
  with_items:
    - echo "mariadb-server-10.3 mysql-server/root_password password `cat /root/.mysql.root`"
    - echo "mariadb-server-10.3 mysql-server/root_password_again password `cat /root/.mysql.root`"
    - echo "debconf aegir/site string {{ inventory_hostname }}"
    - echo "debconf aegir/db_host string 127.0.0.1"
    - echo "debconf aegir/db_user string root"
    - echo "debconf aegir/db_password password `cat /root/.mysql.root`"
    - echo "debconf aegir/webserver string nginx"
  tags:
    - packages
    - aegir-nginx
    - aegir-mariadb

# "echo debconf aegir/email string $aegir_email | debconf-set-selections"
# "echo debconf aegir/makefile string $aegir_makefile | debconf-set-selections"

- name: Making sure the drush package is removed (aegir3 installs through composer)
  apt: pkg=drush state=absent

- apt: update_cache=yes
  tags:
    - packages

- apt:
    name: "{{ item }}"
    state: present
    install_recommends: no
    default_release: jessie-backports
  with_items:
    - nginx
  when: ("'aegir-apache' not in group_names") and (ansible_distribution_release == "jessie")
  tags:
    - packages
    - aegir-nginx

- apt:
    name: "{{ item }}"
    state: present
    install_recommends: no
  with_items:
    - nginx
  when: ("'aegir-apache' not in group_names") and (ansible_distribution_release == "stretch")
  tags:
    - packages
    - aegir-nginx

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - "php{{ phpversion }}-fpm"
  when: "'aegir-apache' not in group_names"
  tags:
    - packages
    - packages-php
    - aegir-php

# nb: imagick is required by Mosaico
- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - "php{{ phpversion }}"
    - "php{{ phpversion }}-bcmath"
    - "php{{ phpversion }}-gd"
    - "php{{ phpversion }}-cli"
    - "php{{ phpversion }}-curl"
    - "php{{ phpversion }}-intl"
    - "php{{ phpversion }}-json"
    - "php{{ phpversion }}-ldap"
    - "php{{ phpversion }}-mysql"
    - "php{{ phpversion }}-soap"
    - "php{{ phpversion }}-zip"
    - "php{{ phpversion }}-xsl"
    - "php{{ phpversion }}-mbstring"
    - "php{{ phpversion }}-zip"
    - "php-imagick"
  tags:
    - packages
    - packages-php
    - aegir-php

# This is to help deal with Debian Stretch upgrades
- apt: name={{ item }} state=absent install_recommends=no
  with_items:
    - php5-fpm
    - php5-gd
    - php5-cli
    - php5-common
    - php5-curl
    - php5-intl
    - php5-json
    - php5-ldap
    - php5-mcrypt
    - php5-mysql
    - php5-xsl
    - php-soap
  when: ansible_distribution_release == "stretch"
  tags:
    - packages
    - packages-php
    - aegir-php

- apt: name={{ item }} state=present install_recommends=no
  with_items:
    - patch # required for drush make
    - pwgen
    - curl
    - gettext
    - xauth
    - xvfb
    - libxrender1
    - ttf-mscorefonts-installer
    - fonts-dejavu-core
    - imagemagick
    - ondir
  tags:
    - packages

# A bit off topic, but too often had the issue where mailname was misconfigured
- copy: content="{{ inventory_hostname }}" dest=/etc/mailname
- file: path=/etc/mailname owner=root group=root mode=0644

# MariaDB 10.3
- apt_key: keyserver=keyserver.ubuntu.com id=0xF1656F24C74CD1D8
  tags:
    - packages
    - aegir
    - aegir-mariadb

- apt_repository:
    repo="deb http://ftp.osuosl.org/pub/mariadb/repo/10.3/debian {{ ansible_distribution_release }} main"
    update_cache=yes
    state=present
  tags:
    - packages
    - aegir
    - aegir-mariadb

- apt: name={{ item }} state=present
  with_items:
    - mariadb-client-10.3
    - mariadb-server-10.3
    - mariadb-server
  tags:
    - packages
    - aegir
    - aegir-mariadb

- name: Get the Aegir repo key
  apt_key: url=http://debian.aegirproject.org/key.asc state=present
  tags:
    - aegir
    - aegir-repo

- name: Add the Aegir apt repository
  apt_repository:
    repo='deb http://debian.aegirproject.org stable main'
    state=present
    update_cache=yes
  tags:
    - aegir
    - aegir-repo

- name: Ensure that our locales are enabled
  locale_gen:
    name: "{{ item }}"
    state: present
  with_items:
    - en_US.UTF-8
    - en_CA.UTF-8
    - fr_CA.UTF-8
    - fr_FR.UTF-8
    - ca_ES.UTF-8
    - es_ES.UTF-8
  tags:
    - aegir
    - aegir-locales

- apt: pkg=aegir3 state=installed
  tags:
    - aegir

- name: Add the aegir user to the admin group
  user: name="aegir"
        groups=adm
        append=yes
  tags:
    - aegir
    - aegir-adm

- name: Download provision_symbiotic from Github
  sudo_user: aegir
  git: repo=https://github.com/coopsymbiotic/provision_symbiotic.git
       version=master
       dest=/var/aegir/.drush/provision_symbiotic
       update=yes
  tags:
    - aegir-provision-symbiotic

- name: Download provision_customhtaccess from Github
  sudo_user: aegir
  git: repo=https://github.com/mlutfy/provision_customhtaccess.git
       version=master
       dest=/var/aegir/.drush/provision_customhtaccess
       update=yes
  tags:
    - aegir-provision-customhtaccess

##
## Update hosting_civicrm from git
##
- name: Get Hostmaster root directory
  become: true
  become_user: aegir
  shell: "drush @hostmaster status | grep 'Drupal root' | awk '{ print $4 }'"
  register: hostmaster_root
  tags:
    - aegir-hosting-civicrm
    - aegir-hosting-https
    - aegir-hosting-wordpress
    - aegir-civicrm-platform
    - aegir-fixownership

# Unless we check if it's already a git repo, in most cases it's static
# since it has been updated by the aegir3 debian packages.
- name: Delete the old hosting_civicrm directory
  file: path="{{ hostmaster_root.stdout }}/profiles/hostmaster/modules/aegir/hosting_civicrm" state=absent
  tags:
    - aegir-hosting-civicrm

- name: Deploy latest hosting_civicrm from Git
  become: true
  become_user: aegir
  git: repo=https://git.drupal.org/project/hosting_civicrm.git
       version=7.x-3.x
       dest="{{ hostmaster_root.stdout }}/profiles/hostmaster/modules/aegir/hosting_civicrm"
       update=yes
  ignore_errors: yes
  tags:
    - aegir-hosting-civicrm

- name: Flush Hostmaster cache
  become: true
  become_user: aegir
  shell: "drush @hostmaster cc all"
  tags:
    - aegir-hosting-civicrm

##
## Deploy hosting_wordpress
##
- name: Deploy latest hosting_wordpress from Git
  become: true
  become_user: aegir
  git: repo=https://github.com/mlutfy/hosting_wordpress.git
       version=7.x-3.x
       dest="{{ hostmaster_root.stdout }}/sites/{{ inventory_hostname }}/modules/hosting_wordpress"
       update=yes
  ignore_errors: yes
  tags:
    - aegir-hosting-wordpress

- name: Install wp-cli
  become: true
  become_user: aegir
  shell: "composer global require wp-cli/wp-cli"
  args:
    creates: /var/aegir/.composer/vendor/wp-cli/wp-cli/bin/wp
  tags:
    - aegir-hosting-civicrm

- name: Install wp-cli-bundle
  become: true
  become_user: aegir
  shell: "composer global require wp-cli/wp-cli-bundle"
  args:
    creates: /var/aegir/.composer/vendor/wp-cli/db-command/composer.json
  tags:
    - aegir-hosting-civicrm

##
## Configurations
##
- name: Aegir modules | Enable a few extra Aegir modules
  shell: "drush @hostmaster en hosting_https hosting_letsencrypt hosting_alias hosting_clone hosting_git hosting_git_pull hosting_tasks_extra hosting_remote_import hosting_civicrm_cron hosting_civicrm hosting_wpsite -y"
  become: true
  become_user: aegir
  tags:
    - aegir-hosting-https
    - aegir-hosting-civicrm
    - aegir-hosting-wordpress

- name: Aegir modules | Enable hosting_nginx_https
  shell: "drush @hostmaster en hosting_nginx_https -y"
  become: true
  become_user: aegir
  when: "'aegir-apache' not in group_names"
  tags:
    - aegir-hosting-https

- name: Aegir modules | Enable hosting_apache_https
  shell: "drush @hostmaster en hosting_apache_https -y"
  become: true
  become_user: aegir
  when: "'aegir-apache' in group_names"
  tags:
    - aegir-hosting-https

- name: Aegir modules | Disable the annoying Drupal overlay
  shell: "drush @hostmaster dis overlay -y"
  become: true
  become_user: aegir

- name: Aegir settings | Enable Aegir queue process
  shell: "drush @hostmaster vset hosting_feature_queued 1"
  become: true
  become_user: aegir
  tags:
    - aegir-settings

- name: Aegir settings | Set CiviCRM default cron interval to 15 mins
  shell: "drush @hostmaster vset hosting_civicrm_cron_default_interval 900"
  become: true
  become_user: aegir
  tags:
    - aegir-settings

- name: Aegir settings | Misc other settings
  become: true
  become_user: aegir
  shell: "drush @hostmaster vset {{ item.name }} {{ item.value }}"
  with_items:
    - { name: 'hosting_feature_git', value: '1' }
    - { name: 'hosting_feature_git_pull', value: '1' }
    - { name: 'hosting_feature_http_basic_auth', value: '1' }
    - { name: 'hosting_feature_migrate', value: '1' }
    - { name: 'hosting_feature_remote_import', value: '1' }
    - { name: 'hosting_feature_fix_ownership', value: '1' }
    - { name: 'hosting_feature_sync', value: '1' }
    - { name: 'hosting_feature_tasks_extra', value: '1' }
    - { name: 'hosting_feature_task_gc', value: '1' }
    - { name: 'hosting_queue_civicrm_cron_enabled', value: '1' }
    - { name: 'hosting_queue_civicrm_cron_frequency', value: '300' }
    - { name: 'hosting_queue_civicrm_cron_items', value: '50' }
    - { name: 'hosting_feature_fix_ownership', value: '1' }
    - { name: 'hosting_feature_fix_permissions', value: '1' }
  tags:
    - aegir-settings
    - aegir-fixownership

- name: Aegir settings | Delete a few settings
  become: true
  become_user: aegir
  shell: "drush @hostmaster vdel {{ item }} -y"
  with_items:
    - update_notify_emails

- name: Aegir | Generate the dhparams file, may take a few minutes
  shell: "openssl dhparam -check -5 4096 > /etc/nginx/params.4096"
  args:
    creates: /etc/nginx/params.4096
  tags:
    - aegir-dhparams

# TODO
# - vget hosting_default_web_server, and enable nginx-ssl, then run verify.
# - enable SSL on the hostmaster site (so that LE can later generate a cert for it)

- name: Restart Aegir hosting queue
  service: name=hosting-queued state=restarted

# Requirements for the wkhtmltox 0.15 package
- apt: name={{ item }} state=absent install_recommends=no
  with_items:
    - fontconfig
    - xfonts-base
    - xfonts-75dpi
  tags:
    - packages
    - aegir
    - aegir-wkhtmltopdf

- name: Install wkhtmltopdf from deb
  apt:
    deb: https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.stretch_amd64.deb
  tags:
    - aegir
    - aegir-wkhtmltopdf

# c.f. https://www.drupal.org/project/hosting_civicrm/issues/2972031
# We mostly execute these scripts so that it deploys the sudo files.
# We override the shell scripts below.
- name: Configure the fix-ownership scripts
  shell: "bash {{ hostmaster_root.stdout }}/profiles/hostmaster/modules/aegir/hosting_tasks_extra/{{ item }}/scripts/install.sh"
  with_items:
    - fix_ownership
  args:
    creates: /etc/sudoers.d/fix-drupal-site-ownership
  tags:
    - aegir-fixownership

- name: Configure the fix-permissions scripts
  shell: "bash {{ hostmaster_root.stdout }}/profiles/hostmaster/modules/aegir/hosting_tasks_extra/{{ item }}/scripts/install.sh"
  with_items:
    - fix_permissions
  args:
    creates: /etc/sudoers.d/fix-drupal-site-permissions
  tags:
    - aegir-fixownership

#
# c.f. https://www.drupal.org/project/hosting_civicrm/issues/2972031
#
- name: Deploy our version of fix-drupal-site-permissions.sh
  template: src=usr/local/bin/fix-drupal-site-permissions.sh dest=/usr/local/bin/fix-drupal-site-permissions.sh owner=root group=root mode=0755
  tags:
    - aegir-fixownership
    - aegir-fixpermission-override

- name: Deploy our fix-wordpress-permissions.sh
  template: src=usr/local/bin/fix-wordpress-permissions.sh dest=/usr/local/bin/fix-wordpress-permissions.sh owner=root group=root mode=0755
  tags:
    - aegir-fixownership
    - aegir-fixpermission-override

- name: Deploy other Aegir helper scripts
  template: src="usr/local/bin/{{ item }}" dest="/usr/local/bin/{{ item }}" owner=root group=root mode=0755
  with_items:
    - resync-drupal-db.sh
    - resync-wordpress-db.sh
  tags:
    - aegir-helper-scripts

- name: Deploy our version of BOA's weekly.sh
  template: src=usr/local/bin/aegir-weekly.sh dest=/usr/local/bin/aegir-weekly.sh owner=root group=root mode=0755
  tags:
    - aegir-weekly

- name: Setup a cron for our version of BOA's weekly.sh
  cron:
    name="aegir-weekly"
    minute="35"
    hour="18"
    hour="18"
    weekday="6"
    job="/usr/local/bin/aegir-weekly.sh"
    cron_file="aegir-weekly"
    user="root"
    state=present
  tags:
    - aegir-weekly

- name: Deploy the civicrm-pull-patch script
  template: src=usr/local/bin/civicrm-pull-patch dest=/usr/local/bin/civicrm-pull-patch owner=root group=root mode=0755
  tags:
    - aegir-civicrm-pull-patch

- include: letsencrypt.yml
- include: settings-php.yml
- include: settings-mysql.yml

- include: civicrm.yml
  tags:
    - aegir-civicrm

- name: bash | Deploy bashrc, profile, ondir configurations
  template: src=var/aegir/dot{{ item }} dest=/var/aegir/{{ item }} owner=aegir group=aegir mode=0644
  with_items:
    - .bashrc
    - .profile
    - .ondirrc
  tags:
    - aegir-bash

- name: sudo | Deploy sudoers file for people who are allowed to sudo to aegir
  template: src=etc/sudoers.d/symbiotic-aegir dest=/etc/sudoers.d/symbiotic-aegir owner=root group=root mode=0440
  tags:
    - aegir-sudoers

- name: Deploy our duct tape script to safely reload nginx
  template: src=usr/local/bin/aegir-reload-nginx.sh dest=/usr/local/bin/aegir-reload-nginx.sh owner=root group=root mode=0755
  tags:
    - aegir-sudoers

- name: ssh | Create the .ssh directory for the Aegir user
  file: path=/var/aegir/.ssh state=directory mode="{{ aegir_ssh_dir_permission }}" owner=aegir group="{{ aegir_ssh_dir_group }}"
  tags:
    - aegir-ssh
    - aegir-civicrm-platform
    - aegir-ssh-test

##
## Platform management
##
- name: ssh | Copy the ssh platform pub key
  copy: src="/etc/ansible/files/sshkeys/aegir/id_rsa_platforms.pub" dest=/var/aegir/.ssh/id_rsa_platforms.pub owner="aegir" group="aegir" mode=0600
  tags:
    - aegir-ssh
    - aegir-civicrm-platform

- name: ssh | Copy the ssh platform priv key
  copy: src="/etc/ansible/files/sshkeys/aegir/id_rsa_platforms" dest=/var/aegir/.ssh/id_rsa_platforms owner="aegir" group="aegir" mode=0600
  tags:
    - aegir-ssh
    - aegir-civicrm-platform

- name: ssh | Create the .ssh/config file if necessary
  file: path=/var/aegir/.ssh/config state=touch mode=0600 owner=aegir group=aegir
  tags:
    - aegir-ssh
    - aegir-civicrm-platform

- name: ssh | Copy ssh config for this key
  blockinfile:
    dest: /var/aegir/.ssh/config
    block: |
      Host git-alt.symbiotic.coop
        IdentityFile /var/aegir/.ssh/id_rsa_platforms
      Host lab-platform-key.symbiotic.coop
        HostName lab.symbiotic.coop
        IdentityFile /var/aegir/.ssh/id_rsa_platforms
  tags:
    - aegir-ssh
    - aegir-civicrm-platform

- name: ssh | Add git ssh host key fingerprints to known_hosts to avoid prompts
  known_hosts:
    path='/etc/ssh/ssh_known_hosts'
    host='{{ item }}'
    key="{{ lookup('pipe', 'ssh-keyscan ' + item) }}"
  with_items:
    - lab.symbiotic.coop
    - lab-platform-key.symbiotic.coop
  tags:
    - aegir-ssh
    - aegir-civicrm-platform

- name: platform | Configure the CiviCRM Drupal7 SymbioTIC platform
  shell: "drush provision-save @platform_CiviCRMd{{ aegir_platform_drupal_version }} --root=/var/aegir/platforms/civicrm-d{{ aegir_platform_drupal_version }} --context_type=platform --repo_url=git@lab-platform-key.symbiotic.coop:coopsymbiotic/symbiotic-platform-d{{ aegir_platform_drupal_version }}-civicrm.git --git_ref=master --deploy_from_git=1"
  args:
    creates: "/var/aegir/.drush/platform_CiviCRMd{{ aegir_platform_drupal_version }}.alias.drushrc.php"
  become: true
  become_user: aegir
  tags:
    - aegir-civicrm-platform

- name: platform | Trigger installation of the CiviCRM Drupal SymbioTIC platform
  shell: "drush @hostmaster hosting-import @platform_CiviCRMd{{ aegir_platform_drupal_version }}"
  args:
    creates: /var/aegir/platforms/civicrm-d{{ aegir_platform_drupal_version }}
  become: true
  become_user: aegir
  tags:
    - aegir-civicrm-platform

- include: sshfs-keys.yml
  tags:
    - aegir-sshfs

- include: mysql-users.yml mysql_users="{{ aegir_mysql_users_ro }}" mysql_privs="SELECT,SHOW VIEW,PROCESS"
  when: aegir_mysql_users_ro | length > 0
  tags:
    - aegir-mysql-users
    - aegir-mysql-users-ro

- include: mysql-users.yml mysql_users="{{ aegir_mysql_users_rw }}" mysql_privs="SELECT,SHOW VIEW,PROCESS,INSERT,UPDATE,DELETE,CREATE VIEW,REPLICATION CLIENT"
  when: aegir_mysql_users_rw | length > 0
  tags:
    - aegir-mysql-users
    - aegir-mysql-users-rw

- include: mysql-replication.yml
  when: aegir_mysql_replication_hosts | length > 0
  tags:
    - aegir-mysql-replication
