---

- apt: name={{ item }} state=present
  with_items:
    - borgbackup
    - borgmatic
  tags:
    - packages

- name: Create the borgmatic config directory
  file:
    path: "/etc/borgmatic"
    state: directory
    owner: "root"
    group: "root"
    mode: 0700
  tags:
    - borgmatic
    - borgmatic-confs

- name: Deploy the main borgmatic configuration file.
  template:
    src: "etc/borgmatic/config.yaml"
    dest: "/etc/borgmatic/config.yaml"
    owner: "root"
    group: "root"
    mode: 0600
  tags:
    - borgmatic
    - borgmatic-confs

# Run cron randomly between 01:00 AND 03:59
- name: Configure cron for borgmatic.
  cron:
    name="borgmatic"
    minute="{{ 60 | random }}"
    hour="{{ 3 | random }}"
    job="PATH=/bin:/usr/bin /usr/bin/borgmatic --verbosity 0"
    cron_file="borgmatic"
    user="root"
    state=present
  tags:
    - borgmatic
    - borgmatic-confs

# - name: Generate an ssh key if necessary for root
#   user: name=root generate_ssh_key=yes ssh_key_bits=2048 ssh_key_file=.ssh/id_rsa
#   tags:
#     - backupninja-rdiff
# 
# - name: Add backup server to known_hosts
#   shell: ssh-keyscan -H {{ backupserver }} >> ~/.ssh/known_hosts
#   tags:
#     - backupninja-rdiff
# 
# - name: Fetch the root public ssh key
#   command: cat /root/.ssh/id_rsa.pub
#   register: root_pub_key
#   tags:
#     - backupninja-rdiff
# 
# - name: Create the backup user on backup server
#   delegate_to: "{{ backupserver }}"
#   user: name="backups-{{ ansible_hostname }}" home="/backup/{{ inventory_hostname }}"
#   tags:
#     - backupninja-rdiff
# 
# - name: Update home directory permissions
#   delegate_to: "{{ backupserver }}"
#   file:
#     path="/backup/{{ inventory_hostname }}"
#     state=directory
#     owner="backups-{{ ansible_hostname }}"
#     group="backups-{{ ansible_hostname }}"
#     mode=0700
#   tags:
#     - backupninja-rdiff
# 
# - name: Create the backup directory on backup server
#   delegate_to: "{{ backupserver }}"
#   file:
#     path="/backup/{{ inventory_hostname }}/rdiff-backup"
#     state=directory
#     owner="backups-{{ ansible_hostname }}"
#     group="backups-{{ ansible_hostname }}"
#     mode=0700
#   tags:
#     - backupninja-rdiff
# 
# - name: Add the public ssh key to backup account on the backup server
#   delegate_to: "{{ backupserver }}"
#   authorized_key: user="backups-{{ ansible_hostname }}" key="{{root_pub_key.stdout}}"
#   tags:
#     - backupninja-rdiff
