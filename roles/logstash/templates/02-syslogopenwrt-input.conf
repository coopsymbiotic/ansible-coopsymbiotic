input {
  udp {
    type => syslogopenwrt
    port => 5544
  }
}
filter {
  if [type] == "syslogopenwrt" and [message] =~ "Pubkey auth succeeded" {
    grok {
      # <85>Mar 17 07:03:35 dropbear[17284]: Pubkey auth succeeded for 'root' with key md5 4a:04:0d:16:e4:1c:d1:38:01:79:58:b3:4a:6c:4d:8c from 2607:f2c0:f00f:2950::1:54293
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: Pubkey auth succeeded for '%{USER:ssh_user}' with key md5 %{NOTSPACE:md5key} from %{IP:client_ip}:%{POSINT:port}" }
    }
  }
  else if [type] == "syslogopenwrt" and [message] =~ "DHCPACK" {
    grok {
      # <30>Mar 17 21:25:14 dnsmasq-dhcp[1142]: DHCPACK(wlan0-1) 192.168.57.145 60:92:17:57:61:41 ExampleHostname
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: DHCPACK\(%{NOTSPACE:interface}\) %{IP:client_ip} %{COMMONMAC:client_mac} %{GREEDYDATA:client_name}" }
    }
  }
  else if [type] == "syslogopenwrt" {
    grok {
      # <31>Mar 17 07:21:13 radvd[1079]: resuming normal operation
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }
  }
  else if [type] == 'syslogopenwrt' and [syslog_program] == 'radvd' and [message] =~ 'resuming normal operation' {
    # babel keeps updating interfaces, which makes radvd obnoxious.
    drop {}
  }
  else if [type] == 'syslogopenwrt' and [syslog_program] == 'radvd' and [message] =~ 'attempting to reread config file' {
    # babel keeps updating interfaces, which makes radvd obnoxious.
    drop {}
  }
}
