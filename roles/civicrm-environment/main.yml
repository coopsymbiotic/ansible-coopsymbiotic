---
- hosts: all
  sudo: yes
  vars:
    civix_version: 15.04.1

  # Installs required tools for CiviCRM development:
  # civix, nodejs, composer, git-scan, etc.
  # https://civicrm.org/blogs/totten/new-46-dev-composer-and-nodejs

  tasks:
    - apt: pkg=gettext state=installed
    - apt: pkg=git state=installed
    - apt: pkg=bzip2 state=installed
    - apt: pkg=nodejs state=installed
    - apt: pkg=npm state=installed

#     - name: Check if Aegir3 is installed
#       command: dpkg-query -W -f='${Status} ${Version}\n' aegir3
#       register: aegir3_check
#
#    - fail: Fail if Aegir is not installed.
#      when: aegir3_check.stdout.find('install ok installed') == -1

    - name: Ensure that the /var/aegir/bin directory exists.
      file: path=/var/aegir/bin/ state=directory owner=aegir

    - name: Install composer
      sudo_user: aegir
      shell: curl -sS https://getcomposer.org/installer | php
      args:
        chdir: /var/aegir/lib/
        creates: composer.phar

    - name: Check composer version
      sudo_user: aegir
      command: /var/aegir/lib/composer.phar diagnose
      ignore_errors: yes
      register: composer_version_check

    - name: Upgrade composer if necessary
      sudo_user: aegir
      shell: curl -sS https://getcomposer.org/installer | php
      args:
        chdir: /var/aegir/lib/
      when: composer_version_check.rc != 0

    # NB: in Ansible 2.0, this can be simplified in one step (unarchive with http)
    # but right now I'm using Debian Jessie, which has Ansible 1.7
    - name: Download civix
      sudo_user: aegir
      get_url:
        url=http://iweb.dl.sourceforge.net/project/civix/civix-{{ civix_version }}.tar.bz2
        dest=/var/aegir/lib/civix-{{ civix_version }}.tar.bz2

    - name: Uncompress the civix archive
      unarchive: src=/var/aegir/lib/civix-{{ civix_version }}.tar.bz2
        dest=/var/aegir/lib/
        copy=no

    - name: Download civistrings from github
      sudo_user: aegir
      git: repo=https://github.com/civicrm/civistrings.git
           dest=/var/aegir/lib/civistrings
           update=yes

    - name: Download git-scan from github
      sudo_user: aegir
      git: repo=https://github.com/totten/git-scan.git
           dest=/var/aegir/lib/git-scan
           update=yes

    - name: Install bower using npm.
      sudo_user: aegir
      npm: name=bower global=no path=/var/aegir/lib

    - name: Create symlinks in /var/aegir/bin/ for composer, civix, git-scan, bower.
      file: src={{ item.path }} dest={{ item.dest }} owner=aegir group=aegir state=link
      with_items:
        - { path: '/var/aegir/lib/composer.phar', dest: '/var/aegir/bin/composer' }
        - { path: '/var/aegir/lib/civix-{{ civix_version }}/civix', dest: '/var/aegir/bin/civix' }
        - { path: '/var/aegir/lib/civistrings/bin/civistrings', dest: '/var/aegir/bin/civistrings' }
        - { path: '/var/aegir/lib/git-scan/bin/git-scan', dest: '/var/aegir/bin/git-scan' }
        - { path: '/var/aegir/lib/node_modules/bower/bin/bower', dest: '/var/aegir/bin/bower' }

    - name: Deploy our PHP ini overrides.
      template:
        src=templates/templates/etc/php5/mods-available/90-symbiotic.ini
        dest=/etc/php5/mods-available/90-symbiotic.ini
        owner=root group=root mode=0644

    - name: Symlink PHP ini settings for Apache2
      file: src="/etc/php5/mods-available/90-symbiotic.ini" dest="/etc/php5/apache2/conf.d/90-symbiotic.ini"
            owner=root group=root state=link

    - name: Deploy our .bashrc for the Aegir user.
      template: src=templates/var/aegir/dot.bashrc dest=/var/aegir/.bashrc owner=aegir group=aegir mode=0644

    - name: Deploy our .profile for the Aegir user (required for bashrc to be read).
      template: src=templates/var/aegir/dot.bashrc dest=/var/aegir/.bashrc owner=aegir group=aegir mode=0644
