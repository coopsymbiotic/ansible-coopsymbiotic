---

- name: WordPress | Run fix permissions
  shell:
    chdir: "{{ site_path }}"
    cmd: "/usr/local/bin/fix-wordpress-permissions.sh --site-path='{{ site_path }}'"
  tags:
    - wordpress-fixpermissions

# Make sure we have correct symlinks for the global plugins
- include_tasks: wordpress-symlinks.yml
  loop:
    - { root_dir: "{{ site_root }}", subdir: "plugins" }
    - { root_dir: "{{ site_root }}", subdir: "themes" }
  loop_control:
    loop_var: symlink_options

- name: Check for a client-custom directory for global plugins and themes
  stat: path=/var/aegir/client-custom/wordpress
  register: p

- include_tasks: wordpress-symlinks.yml
  loop:
    - { root_dir: "/var/aegir/client-custom/wordpress", subdir: "plugins" }
    - { root_dir: "/var/aegir/client-custom/wordpress", subdir: "themes" }
  loop_control:
    loop_var: symlink_options
  when: p.stat.exists

# If the site was migrated, update a few obvious options that should not cause harm
# although updating the siteurl/home is perhaps a bit opiniated
- name: WordPress | Update the wpLoadPhp civicrm_setting
  become_user: aegir
  shell:
    chdir: "{{ site_path }}"
    cmd: "wp civicrm api Setting.create wpLoadPhp={{ site_root }}/wp-load.php"
  when: "'civicrm_sites' in group_names"

- name: WordPress | Update WP home option
  become_user: aegir
  shell:
    chdir: "{{ site_path }}"
    cmd: wp option update home "https://{{ inventory_hostname}}"

- name: WordPress | Update WP siteurl option
  become_user: aegir
  shell:
    chdir: "{{ site_path }}"
    cmd: wp option update siteurl "https://{{ inventory_hostname}}"

- name: WordPress | Flush the WP cache
  become_user: aegir
  shell:
    chdir: "{{ site_path }}"
    cmd: wp cache flush

- name: WordPress | Run civicrm database upgrades
  become_user: aegir
  shell:
    chdir: "{{ site_path }}"
    cmd: wp civicrm upgrade-db

- name: WordPress | Update logging schema as a precaution after upgrades
  become_user: aegir
  shell:
    chdir: "{{ site_path }}"
    cmd: wp civicrm api symbiotic.fixschemalog
  ignore_errors: yes

# @todo Check if upgrades are necessary, to avoid using ignore_errors:yes
- name: WordPress | Run civicrm extension database upgrades
  become_user: aegir
  shell:
    chdir: "{{ site_path }}"
    cmd: wp civicrm api Extension.upgrade
  ignore_errors: yes

- include: wordpress-civicrm-cron.yml
  when: "'civicrm_sites' in group_names"
  tags:
    - civicrm-sites-cron-wpcivicrm
