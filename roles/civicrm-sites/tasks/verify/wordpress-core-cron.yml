---

# Setup the WordPress core cron

- name: systemd | Setup the WP Core Cron service
  template:
    src="etc/systemd/system/wpcorecron.service"
    dest="/etc/systemd/system/wpcorecron_{{ site_shortname }}.service"
    owner=root
    group=root
    mode=0644
  when: civicrm_ansible_cron_interval is defined and civicrm_ansible_cron_interval != "-1"
  notify: reload systemd

- name: systemd | Setup the WP Core Cron timer
  template:
    src="etc/systemd/system/wpcorecron.timer"
    dest="/etc/systemd/system/wpcorecron_{{ site_shortname }}.timer"
    owner=root
    group=root
    mode=0644
  when: civicrm_ansible_cron_interval is defined and civicrm_ansible_cron_interval != "-1"
  notify: reload systemd

# My understanding is that this will make the service run once, then the timer will kick-in
# (because we are using OnUnitInactiveSec=15m; maybe we should use OnCalendar?)
# we also need daemon_reload:true at least once, to pickup changes
- name: systemd | Start the service
  systemd:
    name: "wpcorecron_{{ site_shortname }}.service"
    state: started
    daemon_reload: true
  when: civicrm_ansible_cron_interval is defined and civicrm_ansible_cron_interval != "-1"

- name: systemd | Enable the WP Core Cron timer
  systemd:
    name: "wpcorecron_{{ site_shortname }}.timer"
    enabled: yes
  when: civicrm_ansible_cron_interval is defined and civicrm_ansible_cron_interval != "-1"

- name: systemd | Start the WP Core Cron timer
  systemd:
    name: "wpcorecron_{{ site_shortname }}.timer"
    state: started
  when: civicrm_ansible_cron_interval is defined and civicrm_ansible_cron_interval != "-1"
