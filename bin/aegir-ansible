#!/bin/bash

# Helper script so that the aegir user can run some very specific Ansible commands
# using sudo
#
# Ex: sudo aegir-ansible [site-name] [optional-tag-name]
# Ex: sudo aegir-ansible crm.example.org
# Ex: sudo aegir-ansible crm.example.org [tag-name]

host=$1
tag=$2

# Validate that the hostname looks like a FQDN
echo $host | grep -q -E "^[-\.a-zA-Z0-9]+$"

if [ $? != 0 ]; then
  echo "Error: Invalid host format"
  exit 1
fi

# Avoid displaying skipped tasks, not useful except when debugging Ansible
export ANSIBLE_DISPLAY_SKIPPED_HOSTS=false

# Tell aegir-inventory that we are running locally from the Aegir server
export AEGIR_INVENTORY_LOCAL=1

# Validate that the tag looks valid
if [ -n "$tag" ]; then
  # If necessary, make sure the inventory lists deleted sites so that we can remove their crons
  query_args=""
  if [ "$tag" == "civicrm-sites-delete" ]; then
    query_args="?include_disabled=1"
  fi

  export AEGIR_INVENTORY_ARGS=$query_args

  # Limit to 2 tasks in parallel because running many DB upgrades can overload the system
  # Check for the new aegir-ansible syntax for aegir-on-backdrop
  if [[ "$tag" == *.yml ]]; then
    ansible-playbook -f 2 --connection=local -i /usr/local/coopsymbiotic-ansible/bin/aegir-inventory -l $host /usr/local/coopsymbiotic-ansible/aegir/$tag
  else
    ansible-playbook -f 2 --connection=local -i /usr/local/coopsymbiotic-ansible/bin/aegir-inventory -l $host --tags $tag /usr/local/coopsymbiotic-ansible/civicrm_site.yml
  fi
else
  ansible-playbook -f 2 --connection=local -i /usr/local/coopsymbiotic-ansible/bin/aegir-inventory -l $host /usr/local/coopsymbiotic-ansible/civicrm_site.yml
fi
